#---------------------------------------------------------------------
# Example configuration for a possible web application.  See the
# full configuration options online.
#
#   http://haproxy.1wt.eu/download/1.4/doc/configuration.txt
#
#---------------------------------------------------------------------

#---------------------------------------------------------------------
# Global settings
#---------------------------------------------------------------------
global
    # to have these messages end up in /var/log/haproxy.log you will
    # need to:
    #
    # 1) configure syslog to accept network log events.  This is done
    #    by adding the '-r' option to the SYSLOGD_OPTIONS in
    #    /etc/sysconfig/syslog
    #
    # 2) configure local2 events to go to the /var/log/haproxy.log
    #   file. A line like the following can be added to
    #   /etc/sysconfig/syslog
    #
    #    local2.*                       /var/log/haproxy.log
    #
    log 127.0.0.1 local3
    chroot  /var/lib/haproxy
    daemon
    group  haproxy
    maxconn  4000
    pidfile  /var/run/haproxy.pid
    user  haproxy


#---------------------------------------------------------------------
# common defaults that all the 'listen' and 'backend' sections will
# use if not designated in their block
#---------------------------------------------------------------------
defaults
    log  global
    maxconn  4000
    option  redispatch
    retries  3
    timeout  http-request 10s
    timeout  queue 1m
    timeout  connect 10s
    timeout  client 1m
    timeout  server 1m
    timeout  check 10s


listen galera_cluster
    bind 192.168.2.211:3306
    balance source
    option mysql-check user haproxy_check
    server controller01 192.168.2.101:3306 inter 2000 rise 2 fall 5
    server controller02 192.168.2.102:3306 backup inter 2000 rise 2 fall 5
    server controller03 192.168.2.103:3306 backup inter 2000 rise 2 fall 5
listen keystone_admin_cluster
    bind 192.168.2.211:35357
    balance  source
    option  tcpka
    option  httpchk
    option  tcplog
    server controller01 192.168.2.101:35357 check inter 2000 rise 2 fall 5
    server controller02 192.168.2.102:35357 check inter 2000 rise 2 fall 5
    server controller03 192.168.2.103:35357 check inter 2000 rise 2 fall 5
listen keystone_public_internal_cluster
    bind 192.168.2.211:5000
    balance  source
    option  tcpka
    option  httpchk
    option  tcplog
    server controller01 192.168.2.101:5000 check inter 2000 rise 2 fall 5
    server controller02 192.168.2.102:5000 check inter 2000 rise 2 fall 5
    server controller03 192.168.2.103:5000 check inter 2000 rise 2 fall 5
listen glance_api_cluster
    bind 192.168.2.211:9292
    balance  source
    option  tcpka
    option  httpchk
    option  tcplog
    server controller01 192.168.2.101:9292 check inter 2000 rise 2 fall 5
    server controller02 192.168.2.102:9292 check inter 2000 rise 2 fall 5
    server controller03 192.168.2.103:9292 check inter 2000 rise 2 fall 5
listen glance_registry_cluster
    bind 192.168.2.211:9191
    balance  source
    option  tcpka
    option  tcplog
    server controller01 192.168.2.101:9191 check inter 2000 rise 2 fall 5
    server controller02 192.168.2.102:9191 check inter 2000 rise 2 fall 5
    server controller03 192.168.2.103:9191 check inter 2000 rise 2 fall 5
listen nova_compute_api_cluster
    bind 192.168.2.211:8774
    balance  source
    option  tcpka
    option  httpchk
    option  tcplog

    server controller01 192.168.2.101:8774 check inter 2000 rise 2 fall 5
    server controller02 192.168.2.102:8774 check inter 2000 rise 2 fall 5
    server controller03 192.168.2.103:8774 check inter 2000 rise 2 fall 5
listen nova_metadata_api_cluster
    bind 192.168.2.211:8775
    balance  source
    option  tcpka
    option  tcplog
    server controller01 192.168.2.101:8775 check inter 2000 rise 2 fall 5
    server controller02 192.168.2.102:8775 check inter 2000 rise 2 fall 5
    server controller03 192.168.2.103:8775 check inter 2000 rise 2 fall 5
listen nova_vncproxy_cluster
    bind 192.168.2.211:6080
    balance  source
    option  tcpka
    option  tcplog
    server controller01 192.168.2.101:6080 check inter 2000 rise 2 fall 5
    server controller02 192.168.2.102:6080 check inter 2000 rise 2 fall 5
    server controller03 192.168.2.103:6080 check inter 2000 rise 2 fall 5
listen neutron_api_cluster
    bind 192.168.2.211:9696
    balance  source
    option  tcpka
    option  httpchk
    option  tcplog
    server controller01 192.168.2.101:9696 check inter 2000 rise 2 fall 5
    server controller02 192.168.2.102:9696 check inter 2000 rise 2 fall 5
    server controller03 192.168.2.103:9696 check inter 2000 rise 2 fall 5
